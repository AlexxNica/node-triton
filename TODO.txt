
# today


triton create  # triton create-instance
triton create -p PKG [...] IMG
triton create -i IMG -p PKG [-n NAME] [...]
    # example: triton create base64 -p t4-standard-1g

triton image NAME|SUBSTRING
triton package NAME|SUBSTRING


# DONE

triton
triton -v   # bunyan trace logging
triton images   # list images
triton image IMAGE # get image
triton packages # list packages
triton package PACKAGE

triton instances|insts  # list machines
triton instance|inst ID|NAME    # get machine

triton cloudapi ...




# maybe today

triton login|ssh VM      # kexec?

triton delete VM|IMAGE    # substring matching? too dangerous
    triton delete --vm VM
    triton delete --image IMAGE

"shortid" instead of full UUID "id" in default output, and then allow lookup
by that shortid. Really nice for 80 columns.

triton images
    Drop 'state' in default columns. Add type to be able to see lx or not
    for 'linux' ones. That might hit that stupid naming problem.


# profiles

triton profile   # list all profiles
triton profile NAME  # show NAME profile
triton profile -a NAME  # sets it as active
triton profile -n|--new  # ???

For today: only the implicit 'env' profile.



# config

~/.triton/
    config.json
        {"currProfile": "east3b"}
    east3b/    # profile
    PROFILE2/
        ...



# another day

triton config get|set|list    # see 'npm config'

triton --shell   # or whatever, repl
